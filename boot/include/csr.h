//--------------------------------------------------------------------------------
// Auto-generated by LiteX (759469664) on 2025-09-07 16:34:21
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// CSR Includes.
//--------------------------------------------------------------------------------

#include "soc.h"
#ifndef __GENERATED_CSR_H
#define __GENERATED_CSR_H
#include <stdint.h>
#include "system.h"
#ifndef CSR_ACCESSORS_DEFINED
#include "common.h"
#endif /* ! CSR_ACCESSORS_DEFINED */

#ifndef CSR_BASE
#define CSR_BASE 0xF0000000L
#endif /* ! CSR_BASE */

//--------------------------------------------------------------------------------
// CSR Registers/Fields Definition.
//--------------------------------------------------------------------------------

/* DDRCTRL Registers */
#define CSR_DDRCTRL_BASE (CSR_BASE + 0x0L)
#define CSR_DDRCTRL_INIT_DONE_ADDR (CSR_BASE + 0x0L)
#define CSR_DDRCTRL_INIT_DONE_SIZE 1
#define CSR_DDRCTRL_INIT_ERROR_ADDR (CSR_BASE + 0x4L)
#define CSR_DDRCTRL_INIT_ERROR_SIZE 1

/* DDRCTRL Fields */

/* SDRAM Registers */
#define CSR_SDRAM_BASE (CSR_BASE + 0x800L)
#define CSR_SDRAM_DFII_CONTROL_ADDR (CSR_BASE + 0x800L)
#define CSR_SDRAM_DFII_CONTROL_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_ADDR (CSR_BASE + 0x804L)
#define CSR_SDRAM_DFII_PI0_COMMAND_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_ISSUE_ADDR (CSR_BASE + 0x808L)
#define CSR_SDRAM_DFII_PI0_COMMAND_ISSUE_SIZE 1
#define CSR_SDRAM_DFII_PI0_ADDRESS_ADDR (CSR_BASE + 0x80cL)
#define CSR_SDRAM_DFII_PI0_ADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI0_BADDRESS_ADDR (CSR_BASE + 0x810L)
#define CSR_SDRAM_DFII_PI0_BADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI0_WRDATA_ADDR (CSR_BASE + 0x814L)
#define CSR_SDRAM_DFII_PI0_WRDATA_SIZE 1
#define CSR_SDRAM_DFII_PI0_RDDATA_ADDR (CSR_BASE + 0x818L)
#define CSR_SDRAM_DFII_PI0_RDDATA_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_ADDR (CSR_BASE + 0x81cL)
#define CSR_SDRAM_DFII_PI1_COMMAND_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_ISSUE_ADDR (CSR_BASE + 0x820L)
#define CSR_SDRAM_DFII_PI1_COMMAND_ISSUE_SIZE 1
#define CSR_SDRAM_DFII_PI1_ADDRESS_ADDR (CSR_BASE + 0x824L)
#define CSR_SDRAM_DFII_PI1_ADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI1_BADDRESS_ADDR (CSR_BASE + 0x828L)
#define CSR_SDRAM_DFII_PI1_BADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI1_WRDATA_ADDR (CSR_BASE + 0x82cL)
#define CSR_SDRAM_DFII_PI1_WRDATA_SIZE 1
#define CSR_SDRAM_DFII_PI1_RDDATA_ADDR (CSR_BASE + 0x830L)
#define CSR_SDRAM_DFII_PI1_RDDATA_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_ADDR (CSR_BASE + 0x834L)
#define CSR_SDRAM_DFII_PI2_COMMAND_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_ISSUE_ADDR (CSR_BASE + 0x838L)
#define CSR_SDRAM_DFII_PI2_COMMAND_ISSUE_SIZE 1
#define CSR_SDRAM_DFII_PI2_ADDRESS_ADDR (CSR_BASE + 0x83cL)
#define CSR_SDRAM_DFII_PI2_ADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI2_BADDRESS_ADDR (CSR_BASE + 0x840L)
#define CSR_SDRAM_DFII_PI2_BADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI2_WRDATA_ADDR (CSR_BASE + 0x844L)
#define CSR_SDRAM_DFII_PI2_WRDATA_SIZE 1
#define CSR_SDRAM_DFII_PI2_RDDATA_ADDR (CSR_BASE + 0x848L)
#define CSR_SDRAM_DFII_PI2_RDDATA_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_ADDR (CSR_BASE + 0x84cL)
#define CSR_SDRAM_DFII_PI3_COMMAND_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_ISSUE_ADDR (CSR_BASE + 0x850L)
#define CSR_SDRAM_DFII_PI3_COMMAND_ISSUE_SIZE 1
#define CSR_SDRAM_DFII_PI3_ADDRESS_ADDR (CSR_BASE + 0x854L)
#define CSR_SDRAM_DFII_PI3_ADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI3_BADDRESS_ADDR (CSR_BASE + 0x858L)
#define CSR_SDRAM_DFII_PI3_BADDRESS_SIZE 1
#define CSR_SDRAM_DFII_PI3_WRDATA_ADDR (CSR_BASE + 0x85cL)
#define CSR_SDRAM_DFII_PI3_WRDATA_SIZE 1
#define CSR_SDRAM_DFII_PI3_RDDATA_ADDR (CSR_BASE + 0x860L)
#define CSR_SDRAM_DFII_PI3_RDDATA_SIZE 1

/* SDRAM Fields */
#define CSR_SDRAM_DFII_CONTROL_SEL_OFFSET 0
#define CSR_SDRAM_DFII_CONTROL_SEL_SIZE 1
#define CSR_SDRAM_DFII_CONTROL_CKE_OFFSET 1
#define CSR_SDRAM_DFII_CONTROL_CKE_SIZE 1
#define CSR_SDRAM_DFII_CONTROL_ODT_OFFSET 2
#define CSR_SDRAM_DFII_CONTROL_ODT_SIZE 1
#define CSR_SDRAM_DFII_CONTROL_RESET_N_OFFSET 3
#define CSR_SDRAM_DFII_CONTROL_RESET_N_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_OFFSET 0
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_WE_OFFSET 1
#define CSR_SDRAM_DFII_PI0_COMMAND_WE_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_CAS_OFFSET 2
#define CSR_SDRAM_DFII_PI0_COMMAND_CAS_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_RAS_OFFSET 3
#define CSR_SDRAM_DFII_PI0_COMMAND_RAS_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_WREN_OFFSET 4
#define CSR_SDRAM_DFII_PI0_COMMAND_WREN_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_RDEN_OFFSET 5
#define CSR_SDRAM_DFII_PI0_COMMAND_RDEN_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_TOP_OFFSET 6
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_TOP_SIZE 1
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_BOTTOM_OFFSET 7
#define CSR_SDRAM_DFII_PI0_COMMAND_CS_BOTTOM_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_OFFSET 0
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_WE_OFFSET 1
#define CSR_SDRAM_DFII_PI1_COMMAND_WE_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_CAS_OFFSET 2
#define CSR_SDRAM_DFII_PI1_COMMAND_CAS_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_RAS_OFFSET 3
#define CSR_SDRAM_DFII_PI1_COMMAND_RAS_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_WREN_OFFSET 4
#define CSR_SDRAM_DFII_PI1_COMMAND_WREN_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_RDEN_OFFSET 5
#define CSR_SDRAM_DFII_PI1_COMMAND_RDEN_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_TOP_OFFSET 6
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_TOP_SIZE 1
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_BOTTOM_OFFSET 7
#define CSR_SDRAM_DFII_PI1_COMMAND_CS_BOTTOM_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_OFFSET 0
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_WE_OFFSET 1
#define CSR_SDRAM_DFII_PI2_COMMAND_WE_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_CAS_OFFSET 2
#define CSR_SDRAM_DFII_PI2_COMMAND_CAS_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_RAS_OFFSET 3
#define CSR_SDRAM_DFII_PI2_COMMAND_RAS_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_WREN_OFFSET 4
#define CSR_SDRAM_DFII_PI2_COMMAND_WREN_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_RDEN_OFFSET 5
#define CSR_SDRAM_DFII_PI2_COMMAND_RDEN_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_TOP_OFFSET 6
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_TOP_SIZE 1
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_BOTTOM_OFFSET 7
#define CSR_SDRAM_DFII_PI2_COMMAND_CS_BOTTOM_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_OFFSET 0
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_WE_OFFSET 1
#define CSR_SDRAM_DFII_PI3_COMMAND_WE_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_CAS_OFFSET 2
#define CSR_SDRAM_DFII_PI3_COMMAND_CAS_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_RAS_OFFSET 3
#define CSR_SDRAM_DFII_PI3_COMMAND_RAS_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_WREN_OFFSET 4
#define CSR_SDRAM_DFII_PI3_COMMAND_WREN_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_RDEN_OFFSET 5
#define CSR_SDRAM_DFII_PI3_COMMAND_RDEN_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_TOP_OFFSET 6
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_TOP_SIZE 1
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_BOTTOM_OFFSET 7
#define CSR_SDRAM_DFII_PI3_COMMAND_CS_BOTTOM_SIZE 1

//--------------------------------------------------------------------------------
// CSR Registers Access Functions.
//--------------------------------------------------------------------------------

#ifndef LITEX_CSR_ACCESS_FUNCTIONS
#define LITEX_CSR_ACCESS_FUNCTIONS 1
#endif

#if LITEX_CSR_ACCESS_FUNCTIONS

/* DDRCTRL Access Functions */
static inline uint32_t ddrctrl_init_done_read(void) {
	return csr_read_simple((CSR_BASE + 0x0L));
}
static inline void ddrctrl_init_done_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x0L));
}
static inline uint32_t ddrctrl_init_error_read(void) {
	return csr_read_simple((CSR_BASE + 0x4L));
}
static inline void ddrctrl_init_error_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x4L));
}

/* SDRAM Access Functions */
static inline uint32_t sdram_dfii_control_read(void) {
	return csr_read_simple((CSR_BASE + 0x800L));
}
static inline void sdram_dfii_control_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x800L));
}
static inline uint32_t sdram_dfii_pi0_command_read(void) {
	return csr_read_simple((CSR_BASE + 0x804L));
}
static inline void sdram_dfii_pi0_command_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x804L));
}
static inline uint32_t sdram_dfii_pi0_command_issue_read(void) {
	return csr_read_simple((CSR_BASE + 0x808L));
}
static inline void sdram_dfii_pi0_command_issue_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x808L));
}
static inline uint32_t sdram_dfii_pi0_address_read(void) {
	return csr_read_simple((CSR_BASE + 0x80cL));
}
static inline void sdram_dfii_pi0_address_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x80cL));
}
static inline uint32_t sdram_dfii_pi0_baddress_read(void) {
	return csr_read_simple((CSR_BASE + 0x810L));
}
static inline void sdram_dfii_pi0_baddress_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x810L));
}
static inline uint32_t sdram_dfii_pi0_wrdata_read(void) {
	return csr_read_simple((CSR_BASE + 0x814L));
}
static inline void sdram_dfii_pi0_wrdata_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x814L));
}
static inline uint32_t sdram_dfii_pi0_rddata_read(void) {
	return csr_read_simple((CSR_BASE + 0x818L));
}
static inline uint32_t sdram_dfii_pi1_command_read(void) {
	return csr_read_simple((CSR_BASE + 0x81cL));
}
static inline void sdram_dfii_pi1_command_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x81cL));
}
static inline uint32_t sdram_dfii_pi1_command_issue_read(void) {
	return csr_read_simple((CSR_BASE + 0x820L));
}
static inline void sdram_dfii_pi1_command_issue_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x820L));
}
static inline uint32_t sdram_dfii_pi1_address_read(void) {
	return csr_read_simple((CSR_BASE + 0x824L));
}
static inline void sdram_dfii_pi1_address_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x824L));
}
static inline uint32_t sdram_dfii_pi1_baddress_read(void) {
	return csr_read_simple((CSR_BASE + 0x828L));
}
static inline void sdram_dfii_pi1_baddress_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x828L));
}
static inline uint32_t sdram_dfii_pi1_wrdata_read(void) {
	return csr_read_simple((CSR_BASE + 0x82cL));
}
static inline void sdram_dfii_pi1_wrdata_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x82cL));
}
static inline uint32_t sdram_dfii_pi1_rddata_read(void) {
	return csr_read_simple((CSR_BASE + 0x830L));
}
static inline uint32_t sdram_dfii_pi2_command_read(void) {
	return csr_read_simple((CSR_BASE + 0x834L));
}
static inline void sdram_dfii_pi2_command_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x834L));
}
static inline uint32_t sdram_dfii_pi2_command_issue_read(void) {
	return csr_read_simple((CSR_BASE + 0x838L));
}
static inline void sdram_dfii_pi2_command_issue_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x838L));
}
static inline uint32_t sdram_dfii_pi2_address_read(void) {
	return csr_read_simple((CSR_BASE + 0x83cL));
}
static inline void sdram_dfii_pi2_address_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x83cL));
}
static inline uint32_t sdram_dfii_pi2_baddress_read(void) {
	return csr_read_simple((CSR_BASE + 0x840L));
}
static inline void sdram_dfii_pi2_baddress_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x840L));
}
static inline uint32_t sdram_dfii_pi2_wrdata_read(void) {
	return csr_read_simple((CSR_BASE + 0x844L));
}
static inline void sdram_dfii_pi2_wrdata_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x844L));
}
static inline uint32_t sdram_dfii_pi2_rddata_read(void) {
	return csr_read_simple((CSR_BASE + 0x848L));
}
static inline uint32_t sdram_dfii_pi3_command_read(void) {
	return csr_read_simple((CSR_BASE + 0x84cL));
}
static inline void sdram_dfii_pi3_command_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x84cL));
}
static inline uint32_t sdram_dfii_pi3_command_issue_read(void) {
	return csr_read_simple((CSR_BASE + 0x850L));
}
static inline void sdram_dfii_pi3_command_issue_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x850L));
}
static inline uint32_t sdram_dfii_pi3_address_read(void) {
	return csr_read_simple((CSR_BASE + 0x854L));
}
static inline void sdram_dfii_pi3_address_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x854L));
}
static inline uint32_t sdram_dfii_pi3_baddress_read(void) {
	return csr_read_simple((CSR_BASE + 0x858L));
}
static inline void sdram_dfii_pi3_baddress_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x858L));
}
static inline uint32_t sdram_dfii_pi3_wrdata_read(void) {
	return csr_read_simple((CSR_BASE + 0x85cL));
}
static inline void sdram_dfii_pi3_wrdata_write(uint32_t v) {
	csr_write_simple(v, (CSR_BASE + 0x85cL));
}
static inline uint32_t sdram_dfii_pi3_rddata_read(void) {
	return csr_read_simple((CSR_BASE + 0x860L));
}
#endif /* LITEX_CSR_ACCESS_FUNCTIONS */

#endif /* ! __GENERATED_CSR_H */
